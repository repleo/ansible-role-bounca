---
# tasks file for ansible-role-bounca/

- name: Install base packages
  action: apt pkg={{item}} state=present
  with_items:
  - gettext
  - python3.4
  - python3.4-dev
  - python3-setuptools
  - uwsgi
  - uwsgi-plugin-python3
  - ntp
  - git
  
- name: Install pip
  easy_install: name=pip executable=easy_install-3.4

- name: Install virtualenv
  easy_install: name=virtualenv executable=easy_install-3.4

- name: Set the correct timezone
  file: src=/usr/share/zoneinfo/Europe/Amsterdam dest=/etc/localtime state=link force=yes

- name: Ensure NTP is running and enabled at system start.
  service: name=ntp state=started enabled=yes

- name: create directory /opt/bounca/cron/scripts
  file: path=/opt/bounca/cron/scripts state=directory 
  
- name: Copy ntp monitor script
  copy: src=scripts/ntpd_monitor.sh dest=/opt/bounca/cron/scripts/ntpd_monitor.sh mode=755

- name: add cronjobs for ntp_monitor
  cron: name="ntp monitor" user=root minute="*/1" job="/opt/bounca/cron/scripts/ntpd_monitor.sh" 
            


- name: checkout git repo BounCA
  git: repo=https://github.com/repleo/bounca.git dest=/srv/www/bounca force=yes

- name: Install bounca requirements
  pip: 
    requirements: /srv/www/bounca/requirements.txt
    virtualenv: /srv/www/bounca/env
    virtualenv_python: python3.4

- name: Username set of app directories
  file: path=/srv/www/bounca owner=www-data group=www-data mode=755 recurse=yes


- name: create directory /etc/bounca
  file: path=/etc/bounca state=directory owner=www-data group=www-data

- name: copy bounca config 
  template: src=bounca/{{ item }} dest=/etc/bounca/{{ item }} owner=www-data group=www-data mode=600
  with_items:
    - main.ini

- name: copy uwsgi config 
  template: src=uwsgi/bounca.ini dest=/etc/uwsgi/apps-available/bounca.ini


- name: create uwsgi symlink
  file: src=/etc/uwsgi/apps-available/bounca.ini dest=/etc/uwsgi/apps-enabled/bounca.ini state=link


- name: stop uwsgi automatic
  service: name=uwsgi state=stopped
  

- name: migrate django database
  django_manage: command="migrate --noinput" app_path=/srv/www/bounca virtualenv=/srv/www/bounca/env

- name: start uwsgi automatic
  service: name=uwsgi state=restarted enabled=yes
  
- name: collect the static files
  django_manage: command="collectstatic --noinput" app_path=/srv/www/bounca virtualenv=/srv/www/bounca/env
 

  
#TODO autogenerate admin account with password 
#- name: create django super user admin
#  command: python3 /var/www/{{appname}}/src/manage.py createsuperuser --noinput --username=admin --email=admin@example.com
#  ignore_errors: True
#Alternative at the shell: python3 manage.py createsuperuser --username=admin --email=admin@example.com
#Alternative at the shell: python3 manage.py changepassword admin

